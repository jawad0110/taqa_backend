"""Create an Order Table and Shipping_Address Table

Revision ID: 05ea0324e082
Revises: 81b512a7878a
Create Date: 2025-04-25 02:37:38.370088

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '05ea0324e082'
down_revision: Union[str, None] = '81b512a7878a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'shipped', 'delivered', 'canceled', name='orderstatus'), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=False),
    sa.Column('final_price', sa.Float(), nullable=False),
    sa.Column('coupon_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_orders_uid'), 'orders', ['uid'], unique=True)
    op.create_table('shipping_address',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('area', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('building_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('apartment_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('order_items',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('order_uid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_uid', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_at_purchase', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['order_uid'], ['orders.uid'], ),
    sa.ForeignKeyConstraint(['product_uid'], ['products.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('shipping_address')
    op.drop_index(op.f('ix_orders_uid'), table_name='orders')
    op.drop_table('orders')
    # ### end Alembic commands ###
